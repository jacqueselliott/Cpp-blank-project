// Generated by SpatialOS codegen. DO NOT EDIT!
// Source: improbable/standard_library.schema
syntax = "proto2";
package schema.improbable;
option java_outer_classname = "StandardLibraryOuterClass";

import "improbable/entity_state.proto";

message WorkerAttribute {
  optional string field1_name = 1
    [(.schema.improbable.schemalang_field_name) = "name",
     (.schema.improbable.option) = true];
}

message WorkerAttributeSet {
  repeated .schema.improbable.WorkerAttribute field1_attribute = 1
    [(.schema.improbable.schemalang_field_name) = "attribute"];
}

message WorkerRequirementSet {
  repeated .schema.improbable.WorkerAttributeSet field1_attribute_set = 1
    [(.schema.improbable.schemalang_field_name) = "attribute_set"];
}

message ComponentAcl {
  map<uint32, .schema.improbable.WorkerRequirementSet> field1_write = 1
    [(.schema.improbable.schemalang_field_name) = "write"];
}

message EntityAclData {
  optional .schema.improbable.WorkerRequirementSet field1_read = 1
    [(.schema.improbable.schemalang_field_name) = "read",
     (.schema.improbable.option) = true];
  optional .schema.improbable.ComponentAcl field2_component_acl = 2
    [(.schema.improbable.schemalang_field_name) = "component_acl",
     (.schema.improbable.option) = true];
}

message EntityAcl {
  option (.schema.improbable.component_info) = {
    component_id: 50
    component_name: "improbable.EntityAcl"
  };
  extend .schema.improbable.EntityState {
    optional .schema.improbable.EntityAclData component_extension = 50;
  }
  extend .schema.improbable.EntityEvent {
    optional Events event_extension = 50;
  }
  message Events {
  }
  extend .schema.improbable.EntityCommand {
    optional Commands command_extension = 50;
  }
  message Commands {
  }
}

